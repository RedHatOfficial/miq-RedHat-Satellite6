---
object_type: class
version: 1.0
object:
  attributes:
    description: VMRetirement
    display_name: 
    name: VMRetirement
    type: 
    inherits: 
    visibility: 
    owner: 
  schema:
  - field:
      aetype: state
      name: StartRetirement
      display_name: 
      datatype: string
      priority: 1
      owner: 
      default_value: "/Infrastructure/VM/Retirement/StateMachines/Methods/StartRetirement"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Starting Retirement')
      on_exit: update_retirement_status(status => 'Started Retirement')
      on_error: update_retirement_status(status => 'Error Starting Retirement')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: PreRetirement
      display_name: 
      datatype: string
      priority: 2
      owner: 
      default_value: "/Infrastructure/VM/Retirement/StateMachines/Methods/PreRetirement#${/#vm.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Starting PreRetirement')
      on_exit: update_retirement_status(status => 'PreRetirement succesful')
      on_error: update_retirement_status(status => 'Error in PreRetirement')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: CheckPreRetirement
      display_name: 
      datatype: string
      priority: 3
      owner: 
      default_value: "/Infrastructure/VM/Retirement/StateMachines/Methods/CheckPreRetirement#${/#vm.vendor}"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Starting CheckPreRetirement')
      on_exit: update_retirement_status(status => 'CheckPreRetirement successful')
      on_error: update_retirement_status(status => 'Error in CheckPreRetirement')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: UnregisterDHCP
      display_name: 
      datatype: string
      priority: 4
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: UnregisterAD
      display_name: 
      datatype: string
      priority: 5
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: UnregisterDNS
      display_name: 
      datatype: string
      priority: 6
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: ReleaseMACAddress
      display_name: 
      datatype: string
      priority: 7
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: ReleaseIPAddress
      display_name: 
      datatype: string
      priority: 8
      owner: 
      default_value: 
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Releasing IP Address')
      on_exit: update_retirement_status(status => 'Released IP Address')
      on_error: update_retirement_status(status => 'Error Releasing IP Address')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: PreDeleteFromProvider
      display_name: 
      datatype: string
      priority: 9
      owner: 
      default_value: "#/Infrastructure/VM/Retirement/StateMachines/Methods/PreDeleteFromProvider"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: RemoveFromProvider
      display_name: 
      datatype: string
      priority: 10
      owner: 
      default_value: "/Infrastructure/VM/Retirement/StateMachines/Methods/RemoveFromProvider"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Removing from Provider')
      on_exit: update_retirement_status(status => 'Removed from Provider')
      on_error: update_retirement_status(status => 'Error Removing from Provider')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: CheckRemovedFromProvider
      display_name: 
      datatype: string
      priority: 11
      owner: 
      default_value: "/Infrastructure/VM/Retirement/StateMachines/Methods/CheckDeletedFromProvider"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Checking Removal from Provider')
      on_exit: update_retirement_status(status => 'Checked Removal from Provider')
      on_error: update_retirement_status(status => 'Error Checking Removal from Provider')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: UnregisterSatellite
      display_name: 
      datatype: string
      priority: 12
      owner: 
      default_value: "/Integration/Satellite/Operations/Methods/UnregisterSatellite"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Unregistering from Satellite'')
      on_exit: update_retirement_status(status => 'Unregistered from Satellite'')
      on_error: update_retirement_status(status => 'Failed Unregistering from Satellite'')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: DeactivateCMDB
      display_name: 
      datatype: string
      priority: 13
      owner: 
      default_value: "#/Integration/LDAP/StateMachines/UpdateLDAPEntryAttributes/Default"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Updating LDAP Retirement Status')
      on_exit: update_retirement_status(status => 'Updated LDAP Retirement Status')
      on_error: update_retirement_status(status => 'Failed to Update LDAP Retirement
        Status')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: FinishRetirement
      display_name: 
      datatype: string
      priority: 14
      owner: 
      default_value: "/Infrastructure/VM/Retirement/StateMachines/Methods/FinishRetirement"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Finishing Retirement')
      on_exit: update_retirement_status(status => 'Finished Retirement')
      on_error: update_retirement_status(status => 'Error Finishing Retirement')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: PreDeleteEmailOwner
      display_name: 
      datatype: string
      priority: 15
      owner: 
      default_value: "#/Infrastructure/VM/Retirement/Email/vm_retirement_emails?event=vm_entered_retirement"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: EmailOwner
      display_name: 
      datatype: string
      priority: 16
      owner: 
      default_value: "/Infrastructure/VM/Retirement/Email/vm_retirement_emails?event=vm_retired"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: update_retirement_status(status => 'Emailing VM Owner')
      on_exit: update_retirement_status(status => 'Emailed VM Owner')
      on_error: update_retirement_status(status => 'Error Emailing VM Owner')
      max_retries: '100'
      max_time: 
  - field:
      aetype: state
      name: DeleteFromVMDB
      display_name: 
      datatype: string
      priority: 17
      owner: 
      default_value: "#/Infrastructure/VM/Retirement/StateMachines/Methods/DeleteFromVMDB"
      substitute: true
      message: create
      visibility: 
      collect: 
      scope: 
      description: 
      condition: 
      on_entry: ''
      on_exit: ''
      on_error: ''
      max_retries: '100'
      max_time: 
